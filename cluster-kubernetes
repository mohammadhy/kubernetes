## On HaProxy 
sudo apt-get update && sudo apt-get upgrade -y
sudo apt-get install haproxy -y
vim /etc/haproxy/haproxy.cfg
  frontend fe-apiserver
    bind 0.0.0.0:6443
    mode tcp
    option tcplog
    default_backend ha-apiserver
  backend ha-apiserver
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100

       server master1 192.168.1.200:6443 check
       server master2 192.168.1.201:6443 check
       server master3 192.168.1.202:6443 check

systemctl restart haproxy

#--------------------------------------------------------#
## Install containerd runc network-plugin On All Nodes
wget https://github.com/containerd/containerd/releases/download/v2.0.2/containerd-2.0.2-linux-amd64.tar.gz
wget https://github.com/opencontainers/runc/releases/download/v1.2.4/runc.amd64
wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
wget https://github.com/containernetworking/plugins/releases/download/v1.6.2/cni-plugins-linux-amd64-v1.6.2.tgz
wget https://github.com/containerd/nerdctl/releases/download/v2.0.3/nerdctl-2.0.3-linux-amd64.tar.gz
sudo tar Cxzvf /usr/local containerd-2.0.2-linux-amd64.tar.gz
sudo cp -f containerd.service /etc/systemd/system/containerd.service
sudo systemctl daemon-reload
sudo systemctl enable --now containerd
sudo install -m 755 runc.amd64 /usr/local/sbin/runc
sudo mkdir -p /opt/cni/bin
sudo tar Cxzvf /opt/cni/bin/ cni-plugins-linux-amd64-v1.6.2.tgz
sudo tar xzvf nerdctl-2.0.3-linux-amd64.tar.gz
sudo install -m 755 nerdctl /usr/local/sbin/nerdctl
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml

#--------------------------------------------------------#
## On All Nodes Install Kubelet Kubeadm And Kubectl On Master Only  

sudo apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubectl kubeadm
sudo apt-mark hold kubelet kubectl kubeadm
sudo systemctl enable --now kubelet



sudo swapoff -a
sudo vim /etc/fstab
  # /swap 
cat <<EOF | sudo tee /etc/sysctl.d/kubernetes.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

sudo modprobe overlay
sudo modprobe br_netfilter

#--------------------------------------------------------#
## Init Cluster On master1
sudo kubeadm init --control-plane-endpoint "LOAD_BALANCER_ADDRESS:LOAD_BALANCER_PORT" --upload-certs --pod-network-cidr=10.8.0.0/16 

#---------------------------------------------------------#
## On HaProxy
scp 192.168.1.200:/etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
sudo snap install kubectl --classic
export KUBECONFIG=$HOME/.kube/config
kubectl apply -f  https://calico-v3-25.netlify.app/archive/v3.25/manifests/calico.yaml